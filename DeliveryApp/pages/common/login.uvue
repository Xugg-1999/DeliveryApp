<template>
	<view class="container">
		<!-- 标题 -->
		<view class="title">登录</view>
		<!-- 请选择数据中心 -->
		<view class="form-group">
			<text>请选择数据中心:</text>
			<picker mode="selector" :range="dataCenters" @change="onDataCenterChange">
				<view class="picker">
					{{ selectedDataCenter }}
				</view>
			</picker>
		</view>
		<!-- 账户 -->
		<view class="form-group">
			<text>账户:</text>
			<input type="text" placeholder="请输入账户" v-model="account" />
		</view>
		<!-- 密码 -->
		<view class="form-group">
			<text>密码:</text>
			<input type="password" placeholder="请输入密码" v-model="password" />
		</view>
		<!-- 登录按钮 -->
		<button type="primary" @click="login">登录</button>
	</view>
</template>
<script>
	// 引入配置文件中的IP地址
	import { BASE_URL } from '../../config.js'; 
	export default {
		data() {
			return {
				dataCenters: [], // 存储从API获取的数据
				selectedDataCenter: '请选择数据中心', // 默认提示文本
				account: '', // 账户
				password: '' // 密码
			};
		},
		methods: {
			// 获取数据中心列表
			fetchDataCenters() {
				uni.request({
					url: `${BASE_URL}/api/Warehousing/GetZhangTao`, 
					method: 'POST',
					success: (res) => {
						if (res.data && res.data.success) {
							const centers = res.data.data.map(item => item.FName);
							this.dataCenters = centers;
						} else {
							uni.showToast({
								title: '获取数据失败',
								icon: 'none'
							});
						}
					},
					fail: (err) => {
						uni.showToast({
							title: '网络错误',
							icon: 'none'
						});
					}
				});
			},
			// 处理数据中心选择
			onDataCenterChange(e) {
				const index = e.detail.value;
				this.selectedDataCenter = this.dataCenters[index];
			},
			// 登录按钮点击事件
			login() {
				if (!this.account) {
					uni.showToast({
						title: '请输入账户',
						icon: 'none'
					});
					return;
				}
				if (!this.password) {
					uni.showToast({
						title: '请输入密码',
						icon: 'none'
					});
					return;
				}
				uni.showToast({
					title: '登录成功',
					icon: 'success',
					duration: 1000
				});
				setTimeout(() => {
					uni.switchTab({
						url: '/pages/common/menu'
					});
				}, 1000);
			}
		},
		onLoad() {
			// 页面加载时获取数据中心选项
			this.fetchDataCenters(); 
		}
	};
</script>

<style scoped>
	.container {
		padding: 20px;
	}
	.title {
		font-size: 24px;
		text-align: center;
		margin-bottom: 20px;
	}
	.form-group {
		margin-bottom: 15px;
	}
	.picker {
		background-color: #f3f3f3;
		padding: 10px;
		border-radius: 5px;
		margin-top: 5px;
	}
	input {
		width: 100%;
		padding: 10px;
		border: 1px solid #ddd;
		border-radius: 5px;
	}
	button {
		width: 100%;
		padding: 10px;
		background-color: #007aff;
		color: white;
		text-align: center;
		border-radius: 5px;
		margin-top: 10px;
	}
</style>